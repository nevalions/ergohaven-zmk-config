#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            hold-while-undecided;
        };

        mdq: mdq {
            compatible = "zmk,behavior-hold-tap";
            label = "MDQ";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        cmben {
            bindings = <&layer_en>;
            key-positions = <3 4>;
            layers = <1>;
        };

        cmbru {
            bindings = <&layer_ru>;
            key-positions = <3 4>;
            layers = <0>;
        };
    };

    macros {
        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(N2))>;
            label = "TO_RU";
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(N1))>;
            label = "TO_EN";
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_wait_time 10>,
                <&to_ru>,
                <&macro_wait_time 10>;

            label = "EN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&kp ENTER          &kp Q         &kp W            &kp E         &kp R              &kp T                                   &kp Y        &kp U               &kp I             &kp O               &kp P         &kp BSPC
&mdq LEFT_WIN ESC  &kp A         &mdq LEFT_ALT S  &mdq LCTRL D  &mdq LEFT_SHIFT F  &kp G                                   &kp H        &kp J               &kp K             &kp L               &kp SEMI      &kp APOS
&kp LCTRL          &mdq LC(Z) Z  &mdq LC(X) X     &mdq LC(C) C  &mdq LC(V) V       &kp B                                   &kp N        &mdq RIGHT_SHIFT M  &mdq RCTRL COMMA  &mdq RIGHT_ALT DOT  &kp QUESTION  &kp RIGHT_SHIFT
                                 &layer_ru        &kp GRAVE     &lt 3 TAB          &lt 2 SPACE  &mkp MB1    &kp BACKSPACE  &lt 4 ENTER  &cap_sen 7 MB1      &kp FSLH          &kp N0
            >;

            display-name = "en";
        };

        ru {
            display-name = "ru";
            bindings = <
&kp ENTER          &kp RU_CYRILLIC_SHORT_I    &kp RU_CYRILLIC_TSE             &kp RU_CYRILLIC_U          &kp RU_CYRILLIC_KA              &kp RU_CYRILLIC_IE                             &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE                     &kp RU_CYRILLIC_SHA        &kp RU_CYRILLIC_SHCHA          &kp RU_CYRILLIC_ZE   &kp RU_CYRILLIC_HA
&mdq LEFT_WIN ESC  &kp RU_CYRILLIC_EF         &mdq LEFT_ALT RU_CYRILLIC_YERU  &mdq LCTRL RU_CYRILLIC_VE  &mdq RIGHT_SHIFT RU_CYRILLIC_A  &kp RU_CYRILLIC_PE                             &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O                       &kp RU_CYRILLIC_EL         &kp RU_CYRILLIC_DE             &kp RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&kp LCTRL          &mdq LC(Z) RU_CYRILLIC_YA  &mdq LC(X) RU_CYRILLIC_CHE      &mdq LC(C) RU_CYRILLIC_ES  &mdq LC(V) RU_CYRILLIC_EM       &kp RU_CYRILLIC_I                              &kp RU_CYRILLIC_TE  &mdq RIGHT_SHIFT RU_CYRILLIC_SOFT_SIGN  &mdq RCTRL RU_CYRILLIC_BE  &mdq RIGHT_ALT RU_CYRILLIC_YU  &en QMARK            &kp RSHFT
                                              &layer_en                       &kp RU_CYRILLIC_IO         &lt 3 TAB                       &lt 2 SPACE         &mkp MB1    &kp BACKSPACE  &lt 5 ENTER         &cap_sen 7 MB1                          &kp SLASH                  &kp RU_CYRILLIC_HARD_SIGN
            >;
        };

        nav {
            bindings = <
&trans  &kp KP_NUMLOCK  &kp HOME            &kp UP_ARROW    &kp END              &kp F3                                   &kp PAGE_UP    &kp N7              &kp N8         &kp N9            &kp F7         &kp F9
&trans  &kp F1          &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp F4                                   &kp PAGE_DOWN  &kp N4              &kp N5         &kp N6            &kp F8         &kp F10
&trans  &kp F2          &kp LC(LEFT_ARROW)  &kp CAPS        &kp LC(RIGHT_ARROW)  &kp DELETE                               &trans         &mdq LEFT_SHIFT N1  &mdq RCTRL N2  &mdq LEFT_ALT N3  &kp LS(RIGHT)  &trans
                        &kp F5              &kp F6          &trans               &trans      &trans    &kp LC(BACKSPACE)  &lt 6 N0       &trans              &trans         &trans
            >;

            display-name = "nav";
        };

        numbers {
            bindings = <
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &kp N0  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        sym {
            bindings = <
&trans         &kp AT_SIGN  &kp LT    &kp EQUAL  &kp GT     &kp TILDE                    &trans     &kp LEFT_BRACKET  &kp UNDER      &kp RIGHT_BRACKET  &trans         &trans
&kp RU_NUMERO  &kp BSLH     &kp LPAR  &kp MINUS  &kp RPAR   &kp PLUS                     &kp PRCNT  &kp LBRC          &kp SEMI       &kp RBRC           &kp AMPERSAND  &trans
&trans         &kp EXCL     &kp STAR  &kp COLON  &kp CARET  &kp HASH                     &kp PIPE   &kp DOLLAR        &kp COMMA      &kp DOT            &trans         &trans
                            &trans    &trans     &trans     &mo 6      &trans    &trans  &trans     &trans            &kp BACKSLASH  &trans
            >;

            display-name = "sym";
        };

        sym_ru {
            display-name = "sym_ru";
            bindings = <
&kp RU_CYRILLIC_IO  &en AT              &en LESS_THAN            &kp RU_EQUAL  &en GREATER_THAN  &en TILDE                    &trans          &en LEFT_BRACKET  &kp UNDER      &en RIGHT_BRACKET  &trans         &trans
&kp RU_NUMERO       &kp BSLH            &kp RU_LEFT_PARENTHESIS  &kp RU_MINUS  &kp RU_RPAR       &kp PLUS                     &en RU_PERCENT  &en LEFT_BRACE    &kp RU_SEMI    &en RIGHT_BRACE    &en AMPERSAND  &trans
&trans              &kp RU_EXCLAMATION  &kp RU_ASTERISK          &kp RU_COLON  &en CARET         &en POUND                    &en PIPE        &en DLLR          &kp RU_COMMA   &kp RU_DOT         &trans         &trans
                                        &trans                   &trans        &trans            &mo 6      &trans    &trans  &trans          &trans            &kp BACKSLASH  &trans
            >;
        };

        adj {
            bindings = <
&bootloader  &none  &kp F1  &kp F2   &kp F3   &kp F4                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&none        &none  &kp F5  &kp F6   &kp F7   &kp F8                   &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &none         &studio_unlock
&none        &none  &kp F9  &kp F10  &kp F11  &kp F12                  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &none         &none
                    &none   &none    &none    &none    &none    &none  &none         &none         &none             &none
            >;

            display-name = "adj";
        };

        mouse {
            bindings = <
&trans  &trans  &trans    &trans    &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mkp MB2  &mkp MB3  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans    &trans    &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans    &trans    &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        sniper {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &mkp MB3  &mkp MB2  &mkp MB1  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };
    };
};

&trackball { cpi = <1000>; };

&trackball_listener {
    input-processors = <&zip_xy_scaler 9 20>;

    scroller {
        layers = <7>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <8>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
